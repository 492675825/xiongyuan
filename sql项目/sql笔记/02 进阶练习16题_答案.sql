1、查询“c001”课程比“c002”课程成绩高的所有学生的学号;   关联,子查询,LAG/LEAD,行列转换,排序(表名不区分大小写,但是表数据里面的字段是区分大小写的),
两张表共同的条件尽量写在前面,内关联的从表不用+号

SELECT A.SNO FROM SC A JOIN SC B ON A.SNO=B.SNO AND A.SCORE>B.SCORE AND A.CNO='c001' AND B.CNO='c002';
SELECT A.SNO FROM SC A,SC B WHERE A.SNO=B.SNO AND A.SCORE>B.SCORE AND A.CNO='c001' AND B.CNO='c002';
SELECT A.SNO FROM SC A WHERE A.CNO='c001' AND A.SCORE>(SELECT B.SCORE FROM SC B WHERE A.SNO=B.SNO AND B.CNO='c002');
SELECT B.SNO FROM (SELECT A.*,LEAD(A.SCORE,1) OVER (PARTITION BY A.SNO ORDER BY A.CNO) LEAD FROM SC A WHERE A.CNO IN ('c001','c002')) B WHERE B.SCORE>B.LEAD;
SELECT B.SNO FROM (SELECT A.*,LAG(A.SCORE,1) OVER (PARTITION BY A.SNO ORDER BY A.CNO) LAG FROM SC A WHERE A.CNO IN ('c001','c002')) B WHERE B.SCORE<B.LAG;
SELECT B.SNO FROM (SELECT A.SNO,
SUM(DECODE(A.CNO,'c001',A.SCORE)) C1,
SUM(DECODE(A.CNO,'c002',A.SCORE)) C2
FROM SC A GROUP BY A.SNO) B WHERE B.C1>B.C2;
SELECT * FROM sc PIVOT(MAX(score) FOR cno IN('c001' AS c1,'c002' AS c2)) WHERE c1>c2;
--排序
SELECT A.SNO
  FROM (SELECT SC.*,
               RANK() OVER(PARTITION BY SC.SNO ORDER BY SC.SCORE DESC) RN
          FROM SC
         WHERE SC.CNO IN ('c001', 'c002')) A
 WHERE A.RN = 2
   AND A.CNO = 'c002';

2、查询平均成绩大于60分的同学的学号和平均成绩；
用having简单
SELECT A.SNO,AVG(A.SCORE) AS AVG FROM SC A GROUP BY A.SNO HAVING AVG(A.SCORE)>60;
SELECT B.SNO,B.AVG FROM (SELECT A.*,AVG(A.SCORE) OVER (PARTITION BY A.SNO) AS AVG FROM SC A) B WHERE B.AVG>60;
SELECT B.SNO,B.AVG FROM (SELECT A.SNO,AVG(A.SCORE) AS AVG FROM SC A GROUP BY A.SNO) B WHERE B.AVG>60;
 
3、查询所有同学的学号、姓名、选课数、总成绩；
SELECT S.SNO,S.SNAME,NVL(B.CT,0),NVL(B.SFEN,0) FROM STUDENT S LEFT JOIN (SELECT A.SNO,COUNT(A.CNO) AS CT,SUM(A.SCORE) AS SFEN FROM SC A GROUP BY A.SNO) B ON S.SNO=B.SNO; 

4、查询姓“刘”的老师的个数；   汉字的字符长度为1,聚合函数的参数最好用主键或者常量,不能先GROUP BY T.TNO因为会将数据按照TNO的分组分别求出计数;
SELECT COUNT(1) FROM TEACHER  T WHERE T.TNAME LIKE'刘%';
SELECT COUNT(T.TNO) FROM TEACHER T WHERE T.TNAME LIKE'刘%' GROUP BY T.TNO;
SELECT COUNT(T.TNO) FROM TEACHER T WHERE LTRIM(T.TNAME,'刘')<>T.TNAME GROUP BY T.TNO;
SELECT COUNT(T.TNO) FROM TEACHER T WHERE INSTR(T.TNAME,'刘',1,1)=1 GROUP BY T.TNO;
SELECT COUNT(T.TNO) FROM TEACHER T WHERE SUBSTR(T.TNAME,1,1)='刘' GROUP BY T.TNO;
 	

5、查询没学过“谌燕”老师课的同学的学号、姓名；  修改:要用内关联,不用MINUS,MINUS性能差,除非需要对很多个字段进行操作

SELECT S.SNO,S.SNAME FROM STUDENT S 
MINUS 
SELECT S.SNO,S.SNAME FROM STUDENT S LEFT JOIN SC ON S.SNO=SC.SNO LEFT JOIN COURSE C ON SC.CNO=C.CNO LEFT JOIN TEACHER T ON T.TNO=C.TNO WHERE TNAME='谌燕';

--外关联,统计 学的科数 为0的
SELECT E.SNO, E.SNAME
  FROM (SELECT A.SNO, A.SNAME, COUNT(B.CNO) CT
          FROM STUDENT A
          LEFT JOIN SC B
            ON A.SNO = B.SNO
          LEFT JOIN COURSE C
            ON B.CNO = C.CNO
          LEFT JOIN TEACHER D
            ON C.TNO = D.TNO
           AND D.TNAME = '谌燕'
         GROUP BY A.SNO, A.SNAME) E
 WHERE E.CT = 0;--复杂
 
SELECT *
  FROM STUDENT A
  LEFT JOIN (SELECT B.SNO
               FROM SC B
               JOIN COURSE C
                 ON B.CNO = C.CNO
               JOIN TEACHER D
                 ON C.TNO = D.TNO
                AND D.TNAME = '谌燕') E
    ON A.SNO = E.SNO
 WHERE E.SNO IS NULL;
 
SELECT A.SNO,A.SNAME FROM STUDENT A WHERE A.SNO NOT IN (SELECT B.SNO FROM SC B JOIN COURSE C ON B.CNO=C.CNO JOIN TEACHER D
ON C.TNO=D.TNO AND D.TNAME='谌燕');


SELECT A.*
  FROM STUDENT A
 WHERE NOT EXISTS (SELECT 1
          FROM SC B
          JOIN COURSE C
            ON B.CNO = C.CNO
          JOIN TEACHER D
            ON C.TNO = D.TNO
           AND D.TNAME = '谌燕'
         WHERE A.SNO = B.SNO)

6、查询学过“c001”并且也学过编号“c002”课程的同学的学号、姓名；
--成绩表限制C1,C2,统计科目数,等于2的两门都学过,关联
SELECT S.SNO, S.SNAME
  FROM STUDENT S,
       (SELECT SC.SNO, COUNT(SC.CNO) CT
          FROM SC
         WHERE SC.CNO IN ('c001', 'c002')
         GROUP BY SC.SNO) A
 WHERE S.SNO = A.SNO
   AND A.CT = 2;
   
--成绩表限制C1,C2,统计科目数,等于2的两门都学过,子查询 
SELECT S.SNO, S.SNAME
  FROM STUDENT S
 WHERE (SELECT COUNT(SC.CNO)
          FROM SC
         WHERE S.SNO = SC.SNO
           AND SC.CNO IN ('c001', 'c002')
         GROUP BY SC.SNO) = 2;

SELECT S.SNO,S.SNAME FROM STUDENT S WHERE S.SNO IN (SELECT A.SNO FROM SC A,SC B WHERE A.SNO=B.SNO AND A.CNO='c001' AND B.CNO='c002');
SELECT S.SNO,S.SNAME FROM STUDENT S JOIN (SELECT A.SNO FROM SC A,SC B WHERE A.SNO=B.SNO AND A.CNO='c001' AND B.CNO='c002') C ON S.SNO=C.SNO;
SELECT S.SNO,S.SNAME FROM STUDENT S WHERE EXISTS (SELECT 1 FROM SC A,SC B WHERE A.SNO=B.SNO AND A.SNO=S.SNO AND A.CNO='c001' AND B.CNO='c002');

--求既有ANALYST又有CLERK的部门
SELECT E.DEPTNO,COUNT(DISTINCT E.JOB) FROM EMP E WHERE E.JOB IN ('ANALYST','CLERK') GROUP BY E.DEPTNO;

SELECT S.SNO,S.SNAME FROM STUEDENT S WHERE S.SNO=SC.SNO AND (SELECT SC.CNO FROM SC) IN ('c001') AND (SELECT SC.CNO FROM SC) IN ('c002');--错误

SELECT S.SNO,S.SNAME FROM STUDENT S JOIN SC ON S.SNO=SC.SNO WHERE SC.CNO ='c001'
INTERSECT
SELECT S.SNO,S.SNAME FROM STUDENT S JOIN SC ON S.SNO=SC.SNO WHERE SC.CNO ='c002';--复杂

SELECT S.SNO,S.SNAME FROM STUDENT S WHERE S.SNO IN (SELECT A.SNO FROM SC A WHERE A.CNO='c001' INTERSECT SELECT B.SNO FROM SC B WHERE B.CNO='c002');--其他写法?

7、查询学过“谌燕”老师所教的所有课的同学的学号、姓名；
用count不用sum
SELECT *
  FROM STUDENT ST,
       (SELECT S.SNO, COUNT(1) CT1
          FROM SC S, COURSE C, TEACHER T
         WHERE S.CNO = C.CNO
           AND C.TNO = T.TNO
           AND T.TNAME = '谌燕'
              GROUP BY S.SNO) A,
        (SELECT COUNT(1) AS CT2
           FROM COURSE C,TEACHER T
          WHERE C.TNO = T.TNO
            AND T.TNAME = '谌燕' GROUP BY C.TNO) B
 WHERE ST.SNO = A.SNO
   AND A.CT1 = B.CT2;

SELECT A.SNO, A.SNAME
  FROM STUDENT A
 WHERE (SELECT COUNT(1)
          FROM SC B
          JOIN COURSE C
            ON B.CNO = C.CNO
          JOIN TEACHER D
            ON C.TNO = D.TNO
           AND D.TNAME = '谌燕'
         WHERE A.SNO = B.SNO
         GROUP BY B.SNO) = (SELECT COUNT(1)
                              FROM COURSE C
                              JOIN TEACHER T
                                ON C.TNO = T.TNO
                               AND TNAME = '谌燕');


SELECT S.SNO,S.SNAME FROM STUDENT S JOIN SC ON S.SNO=SC.SNO JOIN COURSE C ON SC.CNO=C.CNO JOIN TEACHER T ON T.TNO=C.TNO WHERE TNAME ='谌燕' GROUP BY S.SNO,S.SNAME;

8、查询课程编号“c002”的成绩比课程编号“c001”课程低的所有同学的学号、姓名；              与第一题重复?


9、查询所有课程成绩小于60 分的同学的学号、姓名；   该名学生每一门课程的成绩都小于60分
SELECT A.SNO,A.SNAME FROM STUDENT A WHERE (SELECT MAX(SC.SCORE) FROM SC WHERE A.SNO=SC.SNO GROUP BY SC.SNO)<60;
SELECT A.SNO,A.SNAME FROM STUDENT A JOIN (SELECT SC.SNO,MAX(SC.SCORE) MAX FROM SC GROUP BY SC.SNO) B ON A.SNO=B.SNO AND B.MAX<60;

SELECT S.SNO,S.SNAME FROM STUDENT S JOIN SC ON S.SNO=SC.SNO WHERE SC.SCORE<60;

10、查询没有学全所有课的同学的学号、姓名；
SELECT *
  FROM STUDENT ST,
       (SELECT S.SNO, COUNT(1) CT1 FROM SC S GROUP BY S.SNO) A,
       (SELECT COUNT(1) AS CT2 FROM COURSE C) B
 WHERE ST.SNO = A.SNO
   AND NVL(CT1, 0) < CT2

 
SELECT A.SNO,A.SNAME FROM (SELECT S.SNO,S.SNAME,NVL(COUNT(SC.CNO),0) CT1 FROM STUDENT S LEFT JOIN SC ON S.SNO=SC.SNO GROUP BY S.SNO,S.SNAME) A  WHERE CT1<(SELECT COUNT(C.CNO) FROM COURSE C);

11、查询至少有一门课与学号为“s001”的同学所学相同的同学的学号和姓名；
SELECT S.SNO,S.SNAME FROM STUDENT S JOIN SC ON S.SNO=SC.SNO WHERE SC.CNO IN (SELECT SC.CNO FROM SC WHERE SC.SNO='s001');

12、查询学过学号为“s001”同学所有门课的其他同学学号和姓名；
--用关联
SELECT S.SNO, S.SNAME
  FROM STUDENT S,
       (SELECT SC.SNO, COUNT(SC.SNO) CT1
          FROM SC
          JOIN (SELECT SC.CNO FROM SC WHERE SC.SNO = 's001') A
            ON SC.CNO = A.CNO
         GROUP BY SC.SNO) B,
       (SELECT COUNT(SC.SNO) CT2 FROM SC WHERE SC.SNO = 's001') C
 WHERE S.SNO = B.SNO
   AND B.CT1 = C.CT2
   AND S.SNO <> 's001';

SELECT S.SNO, S.SNAME
  FROM STUDENT S 
 WHERE (SELECT COUNT(SC.SNO)                                                                                                                                               
          FROM SC
          JOIN (SELECT SC.CNO FROM SC WHERE SC.SNO = 's001') A
            ON SC.CNO = A.CNO
         WHERE S.SNO = SC.SNO
         GROUP BY SC.SNO) = 
       (SELECT COUNT(SC.SNO) FROM SC WHERE SC.SNO = 's001') AND S.SNO<>'s001';


13、把“SC”表中“谌燕”老师教的课的成绩都更改为此课程的平均成绩；
UPDATE SC S
   SET S.SCORE =
       (SELECT AVG(A.SCORE) FROM SC A WHERE A.CNO = S.CNO GROUP BY A.CNO)
 WHERE S.CNO IN (SELECT C.CNO
                   FROM COURSE C, TEACHER T
                  WHERE C.TNO = T.TNO
                    AND T.TNAME = '谌燕')  
 
 
MERGE INTO SC A
USING(
      WITH B AS (SELECT S.CNO, AVG(S.SCORE) AS A_SCORE
                  FROM SC S
                  JOIN COURSE C
                    ON C.CNO = S.CNO
                  JOIN TEACHER T
                    ON T.TNO = C.TNO
                 WHERE T.TNAME = '谌燕'
                 GROUP BY S.CNO)
     SELECT B.CNO, b.A_SCORE FROM B
) B ON (A.CNO = B.CNO)
WHEN MATCHED THEN 
UPDATE SET 
A.SCORE=B.A_SCORE;
					
					

--在WHERE 条件中已经限定了“谌燕”老师教的课,前半段语句条件重复;
UPDATE SC SET SCORE=
(SELECT AVG(B.SCORE) FROM SC B JOIN COURSE C ON B.CNO=C.CNO JOIN TEACHER D ON C.TNO=D.TNO AND D.TNAME='谌燕' WHERE 
SC.CNO=B.CNO GROUP BY B.CNO) 
WHERE SC.CNO IN (SELECT E.CNO FROM COURSE E JOIN TEACHER F ON E.TNO=F.TNO AND F.TNAME='谌燕');

14、查询和“s001”号的同学学习的课程完全相同的其他同学学号和姓名；
--与其他同学的交集科目数,与S001学的科目数一样,同时与该同学自己的学的科目数一样
SELECT S.SNO, S.SNAME
  FROM STUDENT S,
       (SELECT SC.SNO, COUNT(SC.CNO) CT1, COUNT(A.CNO) CT2
          FROM SC
          LEFT JOIN (SELECT SC.CNO FROM SC WHERE SC.SNO = 's001') A
            ON SC.CNO = A.CNO
         GROUP BY SC.SNO) B,
       (SELECT SC.SNO, COUNT(SC.SNO) CT3
          FROM SC
         WHERE SC.SNO = 's001'
         GROUP BY SC.SNO) C
 WHERE S.SNO = B.SNO
   AND B.CT1 = B.CT2
   AND B.CT2 = C.CT3
   AND S.SNO <> 's001';

--以下写法找出的为:学过学号为“s001”同学所有门课的其他同学
SELECT S.SNO, S.SNAME
  FROM STUDENT S
 WHERE (SELECT COUNT(A.CNO)
          FROM SC
          LEFT JOIN (SELECT SC.CNO FROM SC WHERE SC.SNO = 's001') A
            ON SC.CNO = A.CNO
         WHERE S.SNO = SC.SNO
         GROUP BY SC.SNO) = 
       (SELECT COUNT(SC.SNO) FROM SC WHERE SC.SNO = 's001') AND S.SNO<>'s001';
	   
	   
	   
15、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分
SELECT SC.CNO 课程ID,MAX(SCORE) 最高分,MIN(SCORE)最低分 FROM SC GROUP BY SC.CNO;

16、按各科平均成绩从低到高和及格率的百分数从高到低顺序
SELECT SC.CNO,
       AVG(SC.SCORE) A,
       SUM(CASE
             WHEN SC.SCORE >= 60 THEN
              1
             ELSE
              0
           END) / COUNT(1) B
  FROM SC
 GROUP BY SC.CNO
 ORDER BY A ,B DESC;
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   